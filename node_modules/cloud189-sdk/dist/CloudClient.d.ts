interface CacheQuery {
    REQID: any;
    lt: any;
}
interface FamilyListResponse {
    familyInfoResp: [
        {
            familyId: any;
        }
    ];
}
interface APIResponse {
    result: number;
    msg: string;
}
interface UserBriefInfoResponse extends APIResponse {
    sessionKey: string;
}
interface AccessTokenResponse extends APIResponse {
    accessToken: string;
}
interface FamilyUserSignResponse extends APIResponse {
    bonusSpace: number;
    signFamilyId: number;
    signStatus: number;
    signTime: string;
    userId: string;
}
interface UserSignResponse {
    isSign: boolean;
    netdiskBonus: number;
}
interface TaskResponse {
    errorCode: string;
    prizeName: string;
}
declare class CloudClient {
    #private;
    username: string;
    password: string;
    cacheQuery: CacheQuery;
    constructor(username: any, password: any);
    getEncrypt: () => Promise<any>;
    redirectURL: () => Promise<unknown>;
    appConf: (query: any) => Promise<any>;
    /**
     * 登录流程
     * 1.获取公钥
     * 2.获取登录参数
     * 3.获取登录地址
     * 4.跳转到登录页
     * */
    login: () => Promise<any>;
    fetchAPI: (task: any) => Promise<any>;
    getUserSizeInfo: () => Promise<any>;
    userSign: () => Promise<UserSignResponse>;
    taskSign: () => Promise<TaskResponse>;
    taskPhoto: () => Promise<TaskResponse>;
    taskKJ: () => Promise<TaskResponse>;
    getUserBriefInfo: () => Promise<UserBriefInfoResponse>;
    getAccessTokenBySsKey: (sessionKey: any) => Promise<AccessTokenResponse>;
    fetchFamilyAPI: (path: any) => Promise<any>;
    getFamilyList: () => Promise<FamilyListResponse>;
    familyUserSign: (familyId: string) => Promise<FamilyUserSignResponse>;
}
export default CloudClient;
